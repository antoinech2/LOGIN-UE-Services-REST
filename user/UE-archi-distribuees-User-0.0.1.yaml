---
openapi: 3.0.3
info:
  title: User API
  description: This is the API of the User service
  contact:
    name: Jean-Baptiste Lambertin
    email: jean-baptiste.lambertin@imt-atlantique.fr
  version: 0.0.1
tags:
- name: user
  description: Default user operations
paths:
  /:
    get:
      tags:
      - user
      summary: home page of the service
      description: |
        Nothing to do
      operationId: home
      responses:
        "200":
          description: welcome message
          content:
            text/html:
              schema:
                type: string
                example: <h1 style='color:blue'>Welcome to the User service!</h1>
  /bookings/{userid}:
    get:
      tags:
      - user
      summary: get the bookings of a user
      description: By passing in the appropriate options, you can get the bookings of a user
      operationId: get_bookings_byuserid
      parameters:
      - name: userid
        in: path
        required: true
        description: The id of the user
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: bookings of the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllBookings'


components:
  schemas:
    AllBookings:
      type: array
      items:
        $ref: '#/components/schemas/BookingsUser'
    BookingsUser:
      required:
      - dates
      - userid
      type: object
      properties:
        userid:
          type: string
          example: chris_rivers
        dates:
          type: array
          items:
            $ref: '#/components/schemas/DateItem'
    DateItem:
      required:
      - date
      - movies
      type: object
      properties:
        date:
          type: string
          example: "20151201"
        movies:
          type: array
          items:
            type: string
            example: 276c79ec-a26a-40a6-b3d3-fb242a5947b6
    NewMovie:
      required:
      - date
      - movieid
      type: object
      properties:
        date:
          type: string
          example: "20151201"
        movieid:
          type: string
          example: 276c79ec-a26a-40a6-b3d3-fb242a5947b6
